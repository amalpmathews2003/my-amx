%define {
    %persistent object Person {
        
        string name {
            on action write call handle_name_write;
        }

        uint16 age;

        string say_my_name();

    
        event my_event;

        event my_event2;


        %read-only string shadow_name{
            default "";
            // on action validate call check_enum [""];
        }
        bool married_status = False;

        string education {
            on action read call read_education;
        }

         %protected void test_rpc();

        %protected string am_i_married();

        object Organs[]{
            string kind =""{
                on action validate call check_is_valid_organ;
            }
            bool still_kicking = false;
        }

        object LifeEvents{

            object Event[]{
                string name{
                    default "";
                    // on action write call write_event_param;
                }
                uint16 year{
                    default 0;
                    // on action write call write_event_param;
                }
                string details {
                    default "";
                    // on action write call write_event_param;
                }

                // on action add-inst call write_event;
                // on action del-inst call delete_event;
                // on action read call read_event;
            }

            void initLE();
            uint16 append_event(%in %mandatory string name,
                              %in %mandatory int16 year,
                              %in %mandatory string details
                            );
            void retrieve_event(%in %mandatory %strict uint16 index);
            void clearLE();
            // void write_event();
            void print_events();
        }

        
    }
}

%populate {
    // on event "dm:object-changed" call on_person_changed
    //         filter 'object == "Person."';
    
    // on event "dm:object-changed" call on_person_age_changed
    //         filter 'path == "Person." and  contains("parameters.age")';

    // on event "my_event" call on_my_event;   

    // on event "dm:object-changed" call on_person_name_change
    //         filter 'path == "Person." and contains("parameters.name")';

    // on event "dm:object-changed" call on_married_status_change
    //     filter 'path == "Person." and contains("parameters.married_status")';

}